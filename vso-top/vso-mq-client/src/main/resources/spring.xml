<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/rabbit
                http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">
 
   <!-- spring-rabbitmq -->  
   <!-- 连接服务配置  -->
   <rabbit:connection-factory id="connectionFactory" host="192.168.1.200" username="test"
        password="test" port="5672"  />
         
   <rabbit:admin connection-factory="connectionFactory"/>
    
   <!-- queue 队列声明-->
   <rabbit:queue id="test_queue" durable="true" auto-delete="false" exclusive="false" name="registerUser"/>
    
   <!-- exchange queue binging key 绑定 -->
    <rabbit:direct-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="test_queue" key="test_queue_key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>
 
    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto" >
        <rabbit:listener queues="test_queue" ref="userInfoReceiver"/>
    </rabbit:listener-container>
    <bean id="userInfoReceiver" class="com.landhightech.mq.receive.UserInfoReceiver"></bean>
    <!-- spring-rabbitmq -->  
    
    <!-- spring-quartz -->  
    <!-- 处理用户信息的工作定时任务，15分钟触发一次 -->
        <bean id="userDbJob" class="com.landhightech.quartz.user.UserDbJob"></bean>
        <!-- 定义调用对象和调用对象的方法 -->
        <bean id="userDbTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <!-- 调用的类 -->
            <property name="targetObject">
                <ref bean="userDbJob"/>
            </property>
            <!-- 调用类中的方法 -->
            <property name="targetMethod">
                <value>work</value>
            </property>
        </bean>
        <!-- 定义触发时间 -->
        <bean id="userDbTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
            <property name="jobDetail">
                <ref bean="userDbTask"/>
            </property>
            <!-- cron表达式 -->
            <property name="cronExpression">
                <value>0 0/1 * * * ?</value>
            </property>
        </bean>
        <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
        <bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
            <property name="triggers">
                <list>
                    <ref bean="userDbTime"/>
                </list>
            </property>
        </bean>
        <!-- spring-quartz -->  
</beans>